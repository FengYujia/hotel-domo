#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
  worker_connections  10240;
}


http {
  include mime.types;
  default_type  application/octet-stream;
  client_max_body_size 200M;
  client_body_buffer_size 100M;
  sendfile        on;
  #tcp_nopush     on;

  #keepalive_timeout  0;
  keepalive_timeout  65;

  gzip  on;
    # 直接请求nginx也是会报跨域错误的这里设置允许跨域
    # 如果代理地址已经允许跨域则不需要这些, 否则报错(虽然这样nginx跨域就没意义了)
  add_header Access-Control-Allow-Origin *;
  add_header Access-Control-Allow-Headers X-Requested-With;
  add_header Access-Control-Allow-Methods GET,POST,OPTIONS;

  server {
    listen       80;
    server_name  localhost;
    root /www;

    large_client_header_buffers 4 16k;
    client_max_body_size 300m;
    client_body_buffer_size 128k;
    proxy_connect_timeout 600;
    proxy_read_timeout 600;
    proxy_send_timeout 600;
    proxy_buffer_size 64k;
    proxy_buffers 4 32k;
    proxy_busy_buffers_size 64k;
    proxy_temp_file_write_size 64k;

    # 默认首页
    # index index.html;

    location / {
      # 用户浏览器端的缓存设置
    # location ~ .*\.(js|css|jpg|jpeg|gif|png|htm|html|json|xml|svg|woff|ttf|eot|map|ico)$ {
      #  expires 1h;
      # if (-f $request_filename) {
        #  break;
        #}
      #}
      # 动态页面
      if ( !-e $request_filename) {
      # proxy_pass      http://service:8080;
        rewrite ^/(.*) /index.html last;
        break;
      }
      index /index.html;
    }
    location  /api/ {
      # 不进行rewrite,直接将请求转发到backend:4000/api/
      proxy_pass      http://backend:4000/api/;
      proxy_set_header    X-Real-IP        $remote_addr;
      proxy_set_header    X-Forwarded-For  $proxy_add_x_forwarded_for;
      proxy_set_header    HTTP_X_FORWARDED_FOR $remote_addr;
      proxy_set_header    X-Forwarded-Proto $scheme;
      # proxy_redirect off;
      # proxy_cookie_path    / /api;
    }
  }
}
